# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  node: circleci/node@5.1.0
  python: circleci/python@2.1.1
  docker: circleci/docker@2.4.0

commands:
  destroy-cluster:
      description: Destroy EKS Cluster.
      steps:
        - run:
            name: Destroy environment
            when: on_fail
            command: |
              eksctl delete cluster --name hostober-project

  install-kubectl-and-eksctl:
    description: install kubectl and eksctl packages
    steps:
      - run:
          name: Installing kubectl and eksctl
          command: |
                  yum install tar gzip -y
                  curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
                  chmod +x kubectl
                  mv kubectl /usr/local/bin/
                  kubectl version --client
          
                  curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
                  mv /tmp/eksctl /usr/local/bin
                  eksctl version
  
  stop-container:
    description: Stops Container and removes Image
    steps:
      - run:
          name: Clean Environment
          when: on_fail
          command: |
            docker stop $(ps -a -q)
            docker rm $(ps -a -q)
            docker rmi $(docker images -q)

jobs:
  frontend_test:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run lint
          name: Run tests
      - persist_to_workspace:
          root: ./
          paths:
            - .
  backend_test:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          command: pip install pylint && pylint main.py
          name: Run tests
      - persist_to_workspace:
          root: ./
          paths:
            - .
  lint-frontend-dockerfile:
    executor: docker/machine
    steps:
      - checkout
      - docker/dockerlint:
          dockerfile: web.Dockerfile
          treat-warnings-as-errors: true
  
  lint-backend-dockerfile:
    executor: docker/machine
    steps:
      - checkout
      - docker/dockerlint:
          dockerfile: api.Dockerfile
          treat-warnings-as-errors: true


  docker-compose:
    executor: docker/machine
    steps:
      - checkout
      - run:
          name: Login for Docker Hub
          command: | 
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: Start Docker Compose
          command: |
            docker compose up --build -d
      - stop-container
      - run:
          name: Push Images
          command: |
            docker compose push
  
  create-cluster:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - install-kubectl-and-eksctl
      - run:
          name: Creating K8S cluster
          command: |
                  echo
                  eksctl create cluster \
                  --name hostober-project \
                  --region us-east-1 \
                  --with-oidc \
                  --ssh-access \
                  --ssh-public-key sage-key
                  kubectl get nodes -o wide
                  kubectl create namespace prod-namespace
                  aws eks update-kubeconfig --name hostober-project --region us-east-1
      # - run:
      #     name: Install Kubectl and Eksctl
      #     command: |
      #       chmod u+x install-dep.sh \
      #       ./install-dep.sh
      # - run:
      #     name: Creating K8S cluster
      #     command: |
      #       echo
      #       chmod u+x k8-cluster.sh \
      #       ./k8-cluster.sh
      - run:
          name: Deploying application
          command: |
              kubectl apply -k deployment/
      - destroy-cluster
      # - run:
      #     name: Delete Cluster
      #     command: |
      #       chmod u+x del-cluster.sh \
      #       ./del-cluster.sh
      #     when: on_fail

workflows:
  deploy-infra:
    jobs:
    - frontend_test
    - backend_test
    - lint-frontend-dockerfile
    - lint-backend-dockerfile
    - docker-compose:
        requires:
        - lint-frontend-dockerfile
        - lint-backend-dockerfile
        - frontend_test
        - backend_test
    - create-cluster:
        requires:
        - docker-compose